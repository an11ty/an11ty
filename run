#!/bin/bash

COMMAND=$1
SUBFOLDER=$2
TEMPLATE=$3

SITEDIR=`pwd`

# Since this is used as an npx command, first
# we need to install all the dependencies and
# add the bins to that PATH.
# 1. get the path of this actual file
THISFILEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd $THISFILEDIR
cd ..
cd lib/node_modules/an11ty
# 2. install pinned dependencies
npm i
# 3. add to path
ACTUALDIR=`pwd`
PATH=$PATH:$ACTUALDIR/node_modules/.bin

function watch_site () {
	cd $SITEDIR
	echo 'Watching site folder for changes...'
	chokidar "$SUBFOLDER/**" -c "ncp $SUBFOLDER ./_copy"
}

function watch_eleventy () {
	cd $SITEDIR/_copy
	eleventy --watch --serve
}

function build () {
	cd $SITEDIR
	echo 'Cleaning old copy...'
	rm -rf _copy
	echo "Grabbing a copy of $TEMPLATE..."
	degit --mode=git "$TEMPLATE" _copy
	echo "Merging your site in..."
	ncp $SUBFOLDER _copy
	echo "Installing all dependencies..."
	cd _copy
	npm ci
	echo "Finally building... $SITEDIR"
	eleventy
}

function dev () {
	cd $SITEDIR
	echo 'If the _copy does not exist, you will need to run "build" first.'
	# https://stackoverflow.com/questions/3004811/how-do-you-run-multiple-programs-in-parallel-from-a-bash-script
	(trap 'kill 0' SIGINT; watch_site & watch_eleventy)
}

function demo () {
	echo 'HELLO WORLD????'
	ncp --version
}

# execute a function in the context of this scope
eval "$COMMAND"
